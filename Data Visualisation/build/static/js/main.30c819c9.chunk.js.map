{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["pdata","name","score","previousscore","App","className","ResponsiveContainer","width","aspect","BarChart","height","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAWMA,EAAQ,CACZ,CACEC,KAAM,YACNC,MAAO,GACPC,cAAe,IAEjB,CACEF,KAAM,UACNC,MAAO,GACPC,cAAe,IAEjB,CACEF,KAAM,SACNC,MAAO,GACPC,cAAe,IAEjB,CACEF,KAAM,SACNC,MAAO,GACPC,cAAe,IAEjB,CACEF,KAAM,UACNC,MAAO,GACPC,cAAe,IAEjB,CACEF,KAAM,YACNC,MAAO,GACPC,cAAe,IAEjB,CACEF,KAAM,SACNC,MAAO,GACPC,cAAe,IAEjB,CACEF,KAAM,WACNC,MAAO,GACPC,cAAe,IAEjB,CACEF,KAAM,UACNC,MAAO,GACPC,cAAe,IAEjB,CACEF,KAAM,SACNC,MAAO,GACPC,cAAe,IAEjB,CACEF,KAAM,QACNC,MAAO,GACPC,cAAe,IAEjB,CACEF,KAAM,QACNC,MAAO,GACPC,cAAe,IAEjB,CACEF,KAAM,aACNC,MAAO,GACPC,cAAe,KAiCJC,MA7Bf,WACE,OACE,qCACE,oBAAIC,UAAU,gBAAd,uBACA,cAACC,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAQ,EAA1C,SACE,eAACC,EAAA,EAAD,CACEF,MAAO,IACPG,OAAQ,IACRC,KAAMX,EACNY,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,UAWE,cAACC,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAKJ,QAAQ,gBAAgBK,KAAK,WAClC,cAACD,EAAA,EAAD,CAAKJ,QAAQ,QAAQK,KAAK,uBCzFrBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.30c819c9.chunk.js","sourcesContent":["import \"./App.css\";\nimport {\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n} from \"recharts\";\nconst pdata = [\n  {\n    name: \"Madhumati\",\n    score: 35,\n    previousscore: 34,\n  },\n  {\n    name: \"swapnil\",\n    score: 50,\n    previousscore: 75,\n  },\n  {\n    name: \"Nirula\",\n    score: 99,\n    previousscore: 35,\n  },\n  {\n    name: \"Tanvee\",\n    score: 40,\n    previousscore: 90,\n  },\n  {\n    name: \"Venkat \",\n    score: 80,\n    previousscore: 75,\n  },\n  {\n    name: \"Hariharan\",\n    score: 61,\n    previousscore: 61,\n  },\n  {\n    name: \"Vihaan\",\n    score: 54,\n    previousscore: 35,\n  },\n  {\n    name: \"tanmayi \",\n    score: 95,\n    previousscore: 84,\n  },\n  {\n    name: \"Varuna \",\n    score: 35,\n    previousscore: 35,\n  },\n  {\n    name: \"paada \",\n    score: 51,\n    previousscore: 41,\n  },\n  {\n    name: \"meru \",\n    score: 87,\n    previousscore: 80,\n  },\n  {\n    name: \"kanth\",\n    score: 97,\n    previousscore: 99,\n  },\n  {\n    name: \"Hiranmayi \",\n    score: 63,\n    previousscore: 36,\n  },\n];\n\nfunction App() {\n  return (\n    <>\n      <h1 className=\"chart-heading\">Bar Chart</h1>\n      <ResponsiveContainer width=\"100%\" aspect={3}>\n        <BarChart\n          width={500}\n          height={300}\n          data={pdata}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"previousscore\" fill=\"orange\" />\n          <Bar dataKey=\"score\" fill=\"lightblue\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}